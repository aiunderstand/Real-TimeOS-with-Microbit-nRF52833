The real-time OS kernel from Ada is part of the Ravenscar or Jorvik runtime. This kernel is fully supported by the Ada language with syntax, task management and task communication constructs. This gives a unique programming experience that no other language support. The 2022 language specification (ISO/IEC 8652:2023) offers modern language features such as parallel programming incl. core affinity. Ada is heavily used in safety-critical systems which have hard real-time requirements. This means that the language supports being certifiability and various formal proving techniques (see Ada Spark). Various industries such as the avionic, space and automative industry rely on long history of reliability and focus on readability of code. Ada is backed by ISO/IEC international standards and has up-to-date implementations, tooling and support offered by both open source communities and commercial entities like AdaCore. 

The examples can be found (for now) at https://github.com/aiunderstand/Ada_Drivers_Library/tree/master/examples/MicroBit_v2. The examples require the building of the bb-runtime for nfr528333 see https://github.com/AdaCore/bb-runtimes/pull/67. In addition some bugs in pyocd have not been resolved: https://github.com/pyocd/pyOCD/issues/1212. 